# -*- coding: utf-8 -*-
"""cnn2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EJsFmaj7EinZ55gwThfa9JyQ00oVD3Ew
"""

import tensorflow
from tensorflow import keras
from tensorflow.keras.layers import Dense,Conv2D,Flatten
from keras import Sequential
from keras.datasets import mnist



(x_train,Y_train),(x_test,Y_test)=mnist.load_data()

model=Sequential()
model.add(Conv2D(32,kernel_size=(3,3),padding='valid',activation='relu',input_shape=(28,28,1)))
model.add(Conv2D(32,kernel_size=(3,3),padding='valid',activation='relu'))
model.add(Conv2D(32,kernel_size=(3,3),padding='valid',activation='relu'))
model.add(Flatten())
model.add(Dense(128,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

model=Sequential()
model.add(Conv2D(32,kernel_size=(3,3),padding='same',activation='relu',input_shape=(28,28,1)))
model.add(Conv2D(32,kernel_size=(3,3),padding='same',activation='relu'))
model.add(Conv2D(32,kernel_size=(3,3),padding='same',activation='relu'))
model.add(Flatten())
model.add(Dense(128,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])

model.fit(x_train,Y_train,epochs=10,validation_data=(x_test,Y_test))

test_loss,test_acc=model.evaluate(x_test,Y_test)

preditions=model.predict(x_test)

import numpy as np
predicted_labels=np.argmax(preditions,axis=1)

import matplotlib.pyplot as plt
plt.figure(figsize=(10,10))
for i in range(9):
  plt.subplot(3,3,i+1)
plt.imshow(x_test[i].reshape(28,28),cmap='gray')
plt.title=(f"Actual:{Y_test[i]},predicted:{predicted_labels[i]}")
plt.axis=("off")
plt.tight_layout()
plt.show()

from sklearn.metrics import confution_mertics
import seaborn as sns